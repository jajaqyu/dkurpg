[gd_scene load_steps=9 format=3 uid="uid://b3wxdwr43r3gv"]

[ext_resource type="PackedScene" uid="uid://bh7qegx5m24wy" path="res://tscn/hud.tscn" id="1_o8uje"]
[ext_resource type="PackedScene" uid="uid://d32i7ivu474tf" path="res://tscn/Player.tscn" id="1_x3a11"]
[ext_resource type="PackedScene" uid="uid://cesadrt2lyci8" path="res://tscn/portal.tscn" id="2_3gfwe"]
[ext_resource type="PackedScene" uid="uid://bv4rvjc340fex" path="res://tscn/World_Scene.tscn" id="3_3gfwe"]
[ext_resource type="Theme" uid="uid://krja1pyq4q23" path="res://tscn/rad.theme" id="3_o8uje"]
[ext_resource type="Script" uid="uid://dyql3lapfgl4e" path="res://script/minimap.gd" id="6_hii0r"]
[ext_resource type="Texture2D" uid="uid://dld0dony3lxod" path="res://sprites/mapsample (2).png" id="7_hii0r"]

[sub_resource type="GDScript" id="GDScript_8wxc5"]
script/source = "extends Node
var typing_scene: Node2D
var popup_scene = preload(\"res://tscn/job_description.tscn\")
var popup_scene1 = preload(\"res://tscn/game_help.tscn\")
var popup_scene2 = preload(\"res://tscn/item_view.tscn\")
var popup_instance = null

@export var hud_scene: PackedScene
@export var player_scene: PackedScene
@export var portal_scene: PackedScene
@onready var my_panel1 = $CanvasLayer/Panel
@onready var my_panel2 = $CanvasLayer/Panel2
@onready var my_panel3 = $CanvasLayer/Panel3

var char_name : String
var login = false
@export var map_scene: PackedScene
var current_map = null

func _ready():
	if !login:
		my_panel1.hide()
		my_panel2.hide()
		my_panel3.hide()		
		show_login_scene()
	else:
		playGame()


func playInit():	
	current_map = map_scene.instantiate()
	add_child(current_map)
	var spawn_point = current_map.get_node(\"PlayerSpawn\").global_position
	
	var hud = hud_scene.instantiate()
	add_child(hud)
	
	var player = player_scene.instantiate()
	player.global_position = spawn_point
	current_map.add_child(player)
	$CanvasLayer/Minimap.player_node = player
	
	var portal1 = portal_scene.instantiate()
	current_map.add_child(portal1)
	portal1.global_position = Vector2(200, 200)
	portal1.portal_name = \"Stage 1\"
	portal1.target_scene_path = \"res://tscn/stage/stage_near.tscn\"
	
	var portal2 = portal_scene.instantiate()
	current_map.add_child(portal2)
	portal2.global_position = Vector2(200, 400)
	portal2.portal_name = \"Stage 2\"
	portal2.target_scene_path = \"res://tscn/stage/stage_lighting.tscn\"
	
	var portal3 = portal_scene.instantiate()
	current_map.add_child(portal3)
	portal3.global_position = Vector2(400, 200)
	portal3.portal_name = \"Stage 3\"
	portal3.target_scene_path = \"res://tscn/stage/stage_aura.tscn\"
	
	var portal4 = portal_scene.instantiate()
	current_map.add_child(portal4)
	portal4.global_position = Vector2(400, 400)
	portal4.portal_name = \"Stage 4\"
	portal4.target_scene_path = \"res://tscn/stage/stage_fireball.tscn\"
	
	var portal5 = portal_scene.instantiate()
	current_map.add_child(portal5)
	portal5.global_position = Vector2(600, 200)
	portal5.checkItem = true
	portal5.portal_name = \"Stage 5\"
	portal5.target_scene_path = \"res://tscn/random_item.tscn\"
	
	var portal6 = portal_scene.instantiate()
	current_map.add_child(portal6)
	portal6.global_position = Vector2(600, 400)
	portal6.portal_name = \"Stage Boss\"
	portal6.target_scene_path = \"res://tscn/stage_boss.tscn\"
	if HUD.progress >= 140:
		portal6.set_locked(false)
		portal6.get_node(\"Label\").text = \"Stage Boss\"
	else:
		portal6.set_locked(true)
		portal6.get_node(\"Label\").text = \"??? (진행도 140 필요)\"


func _on_player_died():
	get_tree().change_scene_to_file(\"res://tscn/Main.tscn\")


func _input(event):
	if event.is_action_pressed(\"show_popup\"): #k
		popup_instance = popup_scene.instantiate()
		add_child(popup_instance)
		popup_instance.show_trait(\"example\")
		popup_instance.show()
		
	elif event.is_action_pressed(\"show_popup_L\"): #L
		popup_instance = popup_scene1.instantiate()
		add_child(popup_instance)

		popup_instance.show()
	elif event.is_action_pressed(\"show_popup_j\"): #j
		popup_instance = popup_scene2.instantiate()
		popup_instance.show_trait(item_check())
		add_child(popup_instance)

		popup_instance.show()
	elif event.is_action_pressed(\"hide_popup\") and popup_instance: #K
		popup_instance.hide()


func _on_login_success(username):
	var character_scene = preload(\"res://tscn/character_select.tscn\").instantiate()
	HUD.id = username
	get_tree().current_scene.queue_free()
	get_tree().root.add_child(character_scene)
	get_tree().current_scene = character_scene


func playGame():
	my_panel1.show()
	my_panel2.show()
	my_panel3.show()		
	playInit()
	HUD.show_hud()


func show_login_scene():
	var login_scene = preload(\"res://tscn/login_scene.tscn\").instantiate()
	add_child(login_scene)
	login_scene.login_success.connect(_on_login_success)
	HUD.hide_hud()


func item_check(): #이미지는 직업 캐릭터 사진과 스킬 모습
	var db = SQLite.new()
	db.path = HUD.db_path
	db.open_db()
	db.query(\"SELECT ItemHat, ItemArmor, ItemShoes, Itemweapon FROM character WHERE character_name = '%s'\" %HUD.char_name)

	var items = [null, null, null, null]
	if db.query_result.size() > 0:
		var row = db.query_result[0]
		# Hat
		if row.has(\"ItemHat\") and row[\"ItemHat\"] != \"\":	
			items[0] = row[\"ItemHat\"]
		else:
			items[0] = null
		# Armor
		if row.has(\"ItemArmor\") and row[\"ItemArmor\"] != \"\":
			items[1] = row[\"ItemArmor\"]
		else:
			items[1] = null
		# Shoes
		if row.has(\"ItemShoes\") and row[\"ItemShoes\"] != \"\":
			items[2] = row[\"ItemShoes\"]
		else:
			items[2] = null
		# Weapon
		if row.has(\"Itemweapon\") and row[\"Itemweapon\"] != \"\":
			items[3] = row[\"Itemweapon\"]
		else:
			items[3] = null
	db.close_db()
	return items
"

[node name="Main" type="Node"]
script = SubResource("GDScript_8wxc5")
hud_scene = ExtResource("1_o8uje")
player_scene = ExtResource("1_x3a11")
portal_scene = ExtResource("2_3gfwe")
map_scene = ExtResource("3_3gfwe")

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Panel" type="Panel" parent="CanvasLayer"]
anchors_preset = -1
anchor_right = 0.035
anchor_bottom = 0.062
offset_left = 1007.0
offset_top = 581.0
offset_right = 1006.68
offset_bottom = 580.824
theme = ExtResource("3_o8uje")

[node name="Label2" type="Label" parent="CanvasLayer/Panel"]
layout_mode = 0
offset_left = 5.0
offset_top = -2.0
offset_right = 62.0
offset_bottom = 71.0
text = "K
직업
"

[node name="Panel3" type="Panel" parent="CanvasLayer"]
offset_left = 1084.0
offset_top = 582.0
offset_right = 1120.0
offset_bottom = 621.0

[node name="Label" type="Label" parent="CanvasLayer/Panel3"]
layout_mode = 0
offset_left = -3.0
offset_top = -5.0
offset_right = 49.0
offset_bottom = 44.0
text = "L
설명"

[node name="Panel2" type="Panel" parent="CanvasLayer"]
offset_left = 927.0
offset_top = 582.0
offset_right = 967.0
offset_bottom = 622.0

[node name="Label" type="Label" parent="CanvasLayer/Panel2"]
layout_mode = 0
offset_left = 1.0
offset_top = -5.0
offset_right = 49.0
offset_bottom = 44.0
text = "J
아이템"

[node name="Minimap" type="Control" parent="CanvasLayer"]
layout_mode = 3
anchors_preset = 0
offset_right = 40.0
offset_bottom = 40.0
script = ExtResource("6_hii0r")

[node name="SubViewport" type="SubViewportContainer" parent="CanvasLayer/Minimap"]
layout_mode = 0
offset_left = 930.0
offset_right = 1150.0
offset_bottom = 150.0
stretch = true

[node name="TextureRect" type="TextureRect" parent="CanvasLayer/Minimap/SubViewport"]
custom_minimum_size = Vector2(220, 150)
layout_mode = 2
texture = ExtResource("7_hii0r")
expand_mode = 1

[node name="PortalMarker" type="Marker2D" parent="CanvasLayer/Minimap/SubViewport"]
position = Vector2(-875, 66)

[node name="ColorRect" type="ColorRect" parent="CanvasLayer/Minimap/SubViewport/PortalMarker"]
offset_left = 939.0
offset_top = 48.0
offset_right = 954.0
offset_bottom = 55.0
color = Color(0.0980392, 1, 1, 1)

[node name="ColorRect6" type="ColorRect" parent="CanvasLayer/Minimap/SubViewport/PortalMarker"]
offset_left = 1000.0
offset_top = 71.0
offset_right = 1015.0
offset_bottom = 78.0
color = Color(0.0980392, 1, 1, 1)

[node name="ColorRect5" type="ColorRect" parent="CanvasLayer/Minimap/SubViewport/PortalMarker"]
offset_left = 1000.0
offset_top = 6.0
offset_right = 1015.0
offset_bottom = 13.0
color = Color(0.0980392, 1, 1, 1)

[node name="ColorRect4" type="ColorRect" parent="CanvasLayer/Minimap/SubViewport/PortalMarker"]
offset_left = 999.0
offset_top = -41.0
offset_right = 1014.0
offset_bottom = -34.0
color = Color(0.0980392, 1, 1, 1)

[node name="ColorRect3" type="ColorRect" parent="CanvasLayer/Minimap/SubViewport/PortalMarker"]
offset_left = 1056.0
offset_top = 29.0
offset_right = 1071.0
offset_bottom = 36.0
color = Color(0.0980392, 1, 1, 1)

[node name="ColorRect2" type="ColorRect" parent="CanvasLayer/Minimap/SubViewport/PortalMarker"]
offset_left = 941.0
offset_top = -43.0
offset_right = 956.0
offset_bottom = -36.0
color = Color(0.0980392, 1, 1, 1)

[node name="PlayerMarker" type="ColorRect" parent="CanvasLayer/Minimap/SubViewport/PortalMarker"]
anchors_preset = -1
anchor_left = -0.586
anchor_top = 0.613
anchor_right = -0.586
anchor_bottom = 0.613
offset_left = 972.0
offset_top = 52.0
offset_right = 977.0
offset_bottom = 67.0
color = Color(0.968627, 0.309804, 0.0313726, 1)

[node name="SubViewport" type="SubViewport" parent="CanvasLayer/Minimap/SubViewport"]
handle_input_locally = false
size = Vector2i(220, 150)
render_target_update_mode = 4

[node name="Camera2D" type="Camera2D" parent="CanvasLayer/Minimap/SubViewport/SubViewport"]
offset = Vector2(-150, 240)
zoom = Vector2(0.3, 0.3)
